[{
	"model": "rdf_io.servicebinding",
	"pk": 1,
	"fields": {
		"title": "SKOS ConceptScheme update",
		"description": "Updates details of a concept scheme. \r\nDoes not remove existing concepts and inferences.",
		"binding_type": "PERSIST_UPDATE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
		"resource": "/statements?context=<{uri}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": [5]
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 2,
	"fields": {
		"title": "SKOS Concept persistence",
		"description": "Binds SKOS Concepts to the context/named graph of the parent ConceptScheme.\r\n\r\nNote this performs an update - because the content shares the context of the parent scheme.",
		"binding_type": "PERSIST_UPDATE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
		"resource": "/statements?context=<{scheme__uri}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": [6]
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 3,
	"fields": {
		"title": "Generic RDF context in target",
		"description": "A generic approach of publishing a context into a remote repository using the resource id, model and the  host name as a context template",
		"binding_type": "PERSIST_REPLACE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
		"resource": "/statements?context=<{_RDFSERVER}/{model}/{id}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 4,
	"fields": {
		"title": "Topconcept",
		"description": "adds skos:topConcept  axioms to the relevant Concepts.  Note this performs an update on the context, not a replace,  as all concepts in the scheme will share the same named graph.",
		"binding_type": "PERSIST_UPDATE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
		"resource": "/statements?context=<{scheme__uri}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 5,
	"fields": {
		"title": "SPIN rules inferencing store for generating richer entailed graphs",
		"description": "Loads SPIN rule to default inferencing helper",
		"binding_type": "PERSIST_REPLACE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
		"resource": "/statements?context=<{_RDFSERVER}/spin-rules/{id}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 6,
	"fields": {
		"title": "SKOS Concept Inferencing",
		"description": "Runs SPIN rules in inferencing repositoy across SKOS concept data",
		"binding_type": "INFERENCE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
		"resource": "/statements?context=<{uri}/raw>",
		"inferenced_resource": "/statements?context=<{uri}>",
		"object_filter": "",
		"next_service": 7,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 7,
	"fields": {
		"title": "SKOS Inferencing results persist",
		"description": "Persists inferencing results for SKOS rules that create a new graph based on a Concept URL, in the configured INFERREPO",
		"binding_type": "PERSIST_UPDATE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
		"resource": "/statements?context=<{scheme__uri}/inferenced>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": 8,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 8,
	"fields": {
		"title": "Delete SKOS source data from inferencer",
		"description": "Delete intermediate source data from inferencer to keep it lean and clean.",
		"binding_type": "PERSIST_PURGE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
		"resource": "/statements?context=<{uri}/raw>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": 9,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
},
{
	"model": "rdf_io.servicebinding",
	"pk": 9,
	"fields": {
		"title": "Delete intermediate inferenced SKOS context",
		"description": "Delete inferenced context to keep inferencer performant",
		"binding_type": "PERSIST_PURGE",
		"service_api": "RDF4JREST",
		"service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
		"resource": "/statements?context=<{uri}>",
		"inferenced_resource": null,
		"object_filter": "",
		"next_service": null,
		"on_delete_service": null,
		"on_fail_service": null,
		"object_mapping": []
	}
}]